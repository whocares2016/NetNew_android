@startuml

title __UTIL's Class Diagram__\n

  namespace com.example.netnew {
    namespace util {
      class com.example.netnew.util.GlideEngine {
          {static} - instance : GlideEngine
          {static} + createGlideEngine()
          + loadAsGifImage()
          + loadFolderImage()
          + loadGridImage()
          + loadImage()
          + loadImage()
          + loadImage()
          - GlideEngine()
      }
    }
  }
  

  namespace com.example.netnew {
    namespace util {
      class com.example.netnew.util.MySqliteOpenHelper {
          {static} + DB_NAME : String
          {static} + DB_VERSION : int
          - context : Context
          + MySqliteOpenHelper()
          + onCreate()
          + onOpen()
          + onUpgrade()
      }
    }
  }
  

  namespace com.example.netnew {
    namespace util {
      class com.example.netnew.util.NetworkReceiver {
          + onReceive()
      }
    }
  }
  

  namespace com.example.netnew {
    namespace util {
      class com.example.netnew.util.OkHttpTool {
          {static} - TAG : String
          {static} - myOkHttpClient : OkHttpClient
          + getImage()
          {static} + httpGet()
          {static} + httpPost()
          {static} + httpPostJson()
          {static} + httpPostWithFile()
          {static} + httpPostWithFileByte()
          {static} - createGetRequest()
          {static} - createPostRequest()
          {static} - createPostRequestJson()
          {static} - createPostRequestWithFile()
          {static} - createPostRequestWithFileByte()
          {static} - doRequest()
          {static} - getBaseRequest()
      }
    }
  }
  

  namespace com.example.netnew {
    namespace util {
      interface com.example.netnew.util.OkHttpTool.ResponseCallback {
          {abstract} + onResponse()
      }
    }
  }
  

  namespace com.example.netnew {
    namespace util {
      class com.example.netnew.util.SPUtils {
          {static} + IF_FIRST : String
          {static} + IS_ADMIN : String
          {static} + USER_ID : String
          {static} - FILE_NAME : String
          {static} + clear()
          {static} + contains()
          {static} + get()
          {static} + getAll()
          {static} + put()
          {static} + remove()
      }
    }
  }
  

  namespace com.example.netnew {
    namespace util {
      class com.example.netnew.util.SPUtils.SharedPreferencesCompat {
          {static} - sApplyMethod : Method
          {static} + apply()
          {static} - findApplyMethod()
      }
    }
  }
  

  com.example.netnew.util.GlideEngine .up.|> com.luck.picture.lib.engine.ImageEngine
  com.example.netnew.util.MySqliteOpenHelper -up-|> android.database.sqlite.SQLiteOpenHelper
  com.example.netnew.util.NetworkReceiver -up-|> android.content.BroadcastReceiver
  com.example.netnew.util.OkHttpTool +-down- com.example.netnew.util.OkHttpTool.ResponseCallback
  com.example.netnew.util.SPUtils +-down- com.example.netnew.util.SPUtils.SharedPreferencesCompat


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
